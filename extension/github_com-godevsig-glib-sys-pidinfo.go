// Code generated by 'yaegi extract github.com/godevsig/glib/sys/pidinfo'. DO NOT EDIT.

//go:build pidinfo
// +build pidinfo

package extension

import (
	"github.com/godevsig/glib/sys/pidinfo"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/godevsig/glib/sys/pidinfo/pidinfo"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CheckAllTask": reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"CheckChild":   reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"CheckPss":     reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"CheckSingle":  reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"CheckThread":  reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"NewPidInfo":   reflect.ValueOf(pidinfo.NewPidInfo),
		"NewSysInfo":   reflect.ValueOf(pidinfo.NewSysInfo),
		"Pidof":        reflect.ValueOf(pidinfo.Pidof),

		// type definitions
		"PidInfo":     reflect.ValueOf((*pidinfo.PidInfo)(nil)),
		"ProcessStat": reflect.ValueOf((*pidinfo.ProcessStat)(nil)),
		"SysInfo":     reflect.ValueOf((*pidinfo.SysInfo)(nil)),
		"TidInfo":     reflect.ValueOf((*pidinfo.TidInfo)(nil)),
	}
}
